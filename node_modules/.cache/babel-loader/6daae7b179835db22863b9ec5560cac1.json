{"ast":null,"code":"import { LOAD_DROPBOX_DATA } from \"./types\";\nimport axios from 'axios';\nimport { Dropbox } from \"dropbox\";\nexport const loadDropboxData = () => async dispatch => {\n  try {\n    let dbx = new Dropbox({\n      accessToken: 'sl.BAuDa9rsvD6TVigfwU7jc2bs9v9-BYtPVBdaMnPUKisLFzxpCQqC4nI7lZ5KA0oOvSWixLQH3CTPb17_-6eQgxSoUIJV9qKWILaQ2WGfW1yVqrjhpA3j8SlYKlCEGgmV1na3ISg4gKe_',\n      axios\n    });\n    let res = await axios({\n      url: 'https://api-content.dropbox.com/2/files/',\n      method: 'get',\n      headers: {\n        Authorization: 'Bearer ' + 'sl.BAuDa9rsvD6TVigfwU7jc2bs9v9-BYtPVBdaMnPUKisLFzxpCQqC4nI7lZ5KA0oOvSWixLQH3CTPb17_-6eQgxSoUIJV9qKWILaQ2WGfW1yVqrjhpA3j8SlYKlCEGgmV1na3ISg4gKe_',\n        'Content-Type': 'text/plain'\n      }\n    });\n    console.log(res); // dbx.filesListFolder({path: ''})\n    // .then(function(response) {\n    //     dispatch({\n    //         type: LOAD_DROPBOX_DATA,\n    //         data: {\n    //             filesList: response.result.entries\n    //         }\n    //     })\n    // })\n    // .catch(function(error) {\n    //   console.error(error);\n    // });\n  } catch (err) {\n    console.log('err:', err);\n  }\n};","map":{"version":3,"sources":["/Users/hunterhutchisson/inerg/poc-hh/src/actions/index.js"],"names":["LOAD_DROPBOX_DATA","axios","Dropbox","loadDropboxData","dispatch","dbx","accessToken","res","url","method","headers","Authorization","console","log","err"],"mappings":"AACA,SAASA,iBAAT,QAAkC,SAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnD,MAAG;AACC,QAAIC,GAAG,GAAG,IAAIH,OAAJ,CAAY;AAClBI,MAAAA,WAAW,EAAE,iJADK;AAElBL,MAAAA;AAFkB,KAAZ,CAAV;AAIA,QAAIM,GAAG,GAAG,MAAMN,KAAK,CAAC;AAClBO,MAAAA,GAAG,EAAE,0CADa;AAElBC,MAAAA,MAAM,EAAE,KAFU;AAGlBC,MAAAA,OAAO,EAAE;AACNC,QAAAA,aAAa,EAAE,YAAY,iJADrB;AAEN,wBAAgB;AAFV;AAHS,KAAD,CAArB;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ,EAbD,CAcC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GA3BD,CA2BE,OAAMO,GAAN,EAAU;AACRF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,GAApB;AACH;AACJ,CA/BM","sourcesContent":["\nimport { LOAD_DROPBOX_DATA } from \"./types\"\nimport axios from 'axios'\nimport { Dropbox } from \"dropbox\"\n\nexport const loadDropboxData = () => async dispatch => {\n    try{\n        let dbx = new Dropbox({ \n            accessToken: 'sl.BAuDa9rsvD6TVigfwU7jc2bs9v9-BYtPVBdaMnPUKisLFzxpCQqC4nI7lZ5KA0oOvSWixLQH3CTPb17_-6eQgxSoUIJV9qKWILaQ2WGfW1yVqrjhpA3j8SlYKlCEGgmV1na3ISg4gKe_',\n            axios\n          });\n        let res = await axios({\n            url: 'https://api-content.dropbox.com/2/files/',\n            method: 'get',\n            headers: {\n               Authorization: 'Bearer ' + 'sl.BAuDa9rsvD6TVigfwU7jc2bs9v9-BYtPVBdaMnPUKisLFzxpCQqC4nI7lZ5KA0oOvSWixLQH3CTPb17_-6eQgxSoUIJV9qKWILaQ2WGfW1yVqrjhpA3j8SlYKlCEGgmV1na3ISg4gKe_',\n               'Content-Type': 'text/plain'\n            }\n         })\n        console.log(res);\n        // dbx.filesListFolder({path: ''})\n        // .then(function(response) {\n        //     dispatch({\n        //         type: LOAD_DROPBOX_DATA,\n        //         data: {\n        //             filesList: response.result.entries\n        //         }\n        //     })\n        // })\n        // .catch(function(error) {\n        //   console.error(error);\n        // });\n\n    } catch(err){\n        console.log('err:', err)\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}