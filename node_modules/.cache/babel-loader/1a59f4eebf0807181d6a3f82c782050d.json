{"ast":null,"code":"var _jsxFileName = \"/Users/hunterhutchisson/inerg/poc-hh/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadDropboxData } from \"./actions\";\nimport ImgView from \"./components/ImgView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const fileArray = useSelector(state => state.dropbox.dropboxFileArray);\n  const imageArray = useSelector(state => state.dropbox.thumbnailArray);\n  const [imgPath, setImgPath] = useState(\"\");\n  useEffect(() => {\n    dispatch(loadDropboxData());\n  }, []);\n\n  const handleGetImg = path => {\n    try {\n      let dbx = new Dropbox({\n        accessToken: 'sl.BAuriOtPpEMA_28LhjbiaXgi1eiVlBrzQtVacffvsUTSLpEDBaqLrR3u8dh5r9j__LZ0MlS_Bhx5Jbq3VWmmYPyp3qEsKG9dJoQWC8lvQ6n4Q7C0AqMLTnGlO6VCuMAQWd45kbcspzvF'\n      });\n      dbx.filesGetThumbnailV2({\n        resource: {\n          \".tag\": 'path',\n          path: `${path}`\n        },\n        size: \"w1024h768\"\n      }).then(res => {\n        console.log(res);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    } catch (err) {\n      console.log('err:', err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fileArray.map(fileObj => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleGetImg(fileObj.path_lower),\n          children: fileObj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n}\n\n_s(App, \"xrzwBKdRI/GbDhD/Ng+mhCxiEN0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hunterhutchisson/inerg/poc-hh/src/App.js"],"names":["React","useEffect","useState","useDispatch","useSelector","loadDropboxData","ImgView","App","dispatch","fileArray","state","dropbox","dropboxFileArray","imageArray","thumbnailArray","imgPath","setImgPath","handleGetImg","path","dbx","Dropbox","accessToken","filesGetThumbnailV2","resource","size","then","res","console","log","catch","error","err","map","fileObj","path_lower","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,gBAAxB,CAA7B;AACA,QAAMC,UAAU,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcG,cAAxB,CAA9B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMY,YAAY,GAAIC,IAAD,IAAU;AAC7B,QAAG;AACD,UAAIC,GAAG,GAAG,IAAIC,OAAJ,CAAY;AAClBC,QAAAA,WAAW,EAAE;AADK,OAAZ,CAAV;AAGAF,MAAAA,GAAG,CAACG,mBAAJ,CAAwB;AAChBC,QAAAA,QAAQ,EAAE;AACR,kBAAQ,MADA;AAERL,UAAAA,IAAI,EAAE,GAAEA,IAAK;AAFL,SADM;AAKhBM,QAAAA,IAAI,EAAE;AALU,OAAxB,EAOAC,IAPA,CAOKC,GAAG,IAAI;AACJC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,OATD,EAUCG,KAVD,CAUO,UAASC,KAAT,EAAgB;AACnBH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,OAZD;AAaH,KAjBC,CAiBA,OAAMC,GAAN,EAAU;AACRJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,GAApB;AACH;AACA,GArBD;;AAwBA,sBACE;AAAA,cACCtB,SAAS,CAACuB,GAAV,CAAcC,OAAO,IAAE;AACtB,0BACE;AAAA,+BACA;AAAK,UAAA,OAAO,EAAE,MAAIhB,YAAY,CAACgB,OAAO,CAACC,UAAT,CAA9B;AAAA,oBAAqDD,OAAO,CAACE;AAA7D;AAAA;AAAA;AAAA;AAAA;AADA,uBADF;AAKD,KANA;AADD,mBADF;AAoBD;;GAvDQ5B,G;UACUJ,W,EACCC,W,EACCA,W;;;KAHZG,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport { loadDropboxData } from \"./actions\";\nimport ImgView from \"./components/ImgView\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const fileArray = useSelector(state => state.dropbox.dropboxFileArray)\n  const imageArray = useSelector(state => state.dropbox.thumbnailArray)\n  const [imgPath, setImgPath] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(loadDropboxData())\n  }, [])\n\n\n  const handleGetImg = (path) => {\n    try{\n      let dbx = new Dropbox({ \n          accessToken: 'sl.BAuriOtPpEMA_28LhjbiaXgi1eiVlBrzQtVacffvsUTSLpEDBaqLrR3u8dh5r9j__LZ0MlS_Bhx5Jbq3VWmmYPyp3qEsKG9dJoQWC8lvQ6n4Q7C0AqMLTnGlO6VCuMAQWd45kbcspzvF'\n      });\n      dbx.filesGetThumbnailV2({\n              resource: {\n                \".tag\": 'path',\n                path:`${path}`\n              },\n              size: \"w1024h768\"\n      }).\n      then(res => {\n              console.log(res);\n      })\n      .catch(function(error) {\n          console.error(error);\n      });\n  } catch(err){\n      console.log('err:', err)\n  }\n  };\n  \n\n  return (\n    <>\n    {fileArray.map(fileObj=>{\n      return( \n        <>\n        <div onClick={()=>handleGetImg(fileObj.path_lower)}>{fileObj.name}</div>\n        </>\n      )\n    })}\n    {/* {imageArray.map((imageObj, index)=>{\n      let thumbnail = `data:image/jpeg;base64, ${imageObj.thumbnail}`\n      return (\n        <>\n          <img key={imageObj.metadata.name} src={thumbnail} alt={imageObj.metadata.name} />\n          <br key={index}/>\n        </>\n      )\n    })} */}\n    </>\n  )\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}