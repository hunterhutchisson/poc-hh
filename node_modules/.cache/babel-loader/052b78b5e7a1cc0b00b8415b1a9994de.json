{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadDropboxData } from \"./actions\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const fileArray = useSelector(state => state.dropbox.dropboxFileArray);\n  const imageArray = useSelector(state => state.dropbox.thumbnailArray);\n  useEffect(() => {\n    dispatch(loadDropboxData());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: imageArray.map((imageObj, index))\n  }, void 0, false);\n}\n\n_s(App, \"sfU7CPiyyqwz+2s4gxWwAsaJVSo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hunterhutchisson/inerg/poc-hh/src/App.js"],"names":["React","useEffect","useDispatch","useSelector","loadDropboxData","App","dispatch","fileArray","state","dropbox","dropboxFileArray","imageArray","thumbnailArray","map","imageObj","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,eAAT,QAAgC,WAAhC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,gBAAxB,CAA7B;AACA,QAAMC,UAAU,GAAGR,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcG,cAAxB,CAA9B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,eAAe,EAAhB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACCO,UAAU,CAACE,GAAX,EAAgBC,QAAQ,EAAEC,KAA1B;AADD,mBADF;AAKD;;GAdQV,G;UACUH,W,EACCC,W,EACCA,W;;;KAHZE,G;AAgBT,eAAeA,GAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport { loadDropboxData } from \"./actions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const fileArray = useSelector(state => state.dropbox.dropboxFileArray)\n  const imageArray = useSelector(state => state.dropbox.thumbnailArray)\n\n  useEffect(() => {\n    dispatch(loadDropboxData())\n  }, [])\n\n  return (\n    <>\n    {imageArray.map((imageObj, index))}\n    </>\n  )\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}