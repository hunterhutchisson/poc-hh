{"ast":null,"code":"import { LOAD_DROPBOX_DATA } from \"./types\";\nimport { Dropbox } from \"dropbox\";\nexport const loadDropboxData = () => async dispatch => {\n  try {\n    let dbx = new Dropbox({\n      accessToken: 'sl.BAuriOtPpEMA_28LhjbiaXgi1eiVlBrzQtVacffvsUTSLpEDBaqLrR3u8dh5r9j__LZ0MlS_Bhx5Jbq3VWmmYPyp3qEsKG9dJoQWC8lvQ6n4Q7C0AqMLTnGlO6VCuMAQWd45kbcspzvF'\n    });\n    dbx.filesListFolder({\n      path: ''\n    }).then(function (response) {\n      console.log(response);\n      dispatch({\n        type: LOAD_DROPBOX_DATA,\n        data: {\n          fileArray: response.result.entries\n        }\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  } catch (err) {\n    console.log('err:', err);\n  }\n};\nexport const loadDropboxImgData = path => async dispatch => {\n  try {\n    let dbx = new Dropbox({\n      accessToken: 'sl.BAuriOtPpEMA_28LhjbiaXgi1eiVlBrzQtVacffvsUTSLpEDBaqLrR3u8dh5r9j__LZ0MlS_Bhx5Jbq3VWmmYPyp3qEsKG9dJoQWC8lvQ6n4Q7C0AqMLTnGlO6VCuMAQWd45kbcspzvF'\n    });\n    dbx.filesGetThumbnailV2({\n      entries: paths\n    }).then(res => {\n      console.log(res.result.entries);\n      dispatch({\n        type: LOAD_DROPBOX_DATA,\n        data: {\n          fileArray: response.result.entries,\n          thumbnail: res.result.entries\n        }\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  } catch (err) {\n    console.log('err:', err);\n  }\n};","map":{"version":3,"sources":["/Users/hunterhutchisson/inerg/poc-hh/src/actions/index.js"],"names":["LOAD_DROPBOX_DATA","Dropbox","loadDropboxData","dispatch","dbx","accessToken","filesListFolder","path","then","response","console","log","type","data","fileArray","result","entries","catch","error","err","loadDropboxImgData","filesGetThumbnailV2","paths","res","thumbnail"],"mappings":"AACA,SAASA,iBAAT,QAAkC,SAAlC;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnD,MAAG;AACC,QAAIC,GAAG,GAAG,IAAIH,OAAJ,CAAY;AAClBI,MAAAA,WAAW,EAAE;AADK,KAAZ,CAAV;AAGAD,IAAAA,GAAG,CAACE,eAAJ,CAAoB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAApB,EACCC,IADD,CACM,UAASC,QAAT,EAAmB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAN,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAEZ,iBADD;AAELa,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAEL,QAAQ,CAACM,MAAT,CAAgBC;AADzB;AAFD,OAAD,CAAR;AAMH,KATD,EAUCC,KAVD,CAUO,UAASC,KAAT,EAAgB;AACnBR,MAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACH,KAZD;AAcH,GAlBD,CAkBE,OAAMC,GAAN,EAAU;AACRT,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBQ,GAApB;AACH;AACJ,CAtBM;AAuBP,OAAO,MAAMC,kBAAkB,GAAIb,IAAD,IAAU,MAAMJ,QAAN,IAAkB;AAC1D,MAAG;AACC,QAAIC,GAAG,GAAG,IAAIH,OAAJ,CAAY;AAClBI,MAAAA,WAAW,EAAE;AADK,KAAZ,CAAV;AAGAD,IAAAA,GAAG,CAACiB,mBAAJ,CAAwB;AAChBL,MAAAA,OAAO,EAAEM;AADO,KAAxB,EAGAd,IAHA,CAGKe,GAAG,IAAI;AACJb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAG,CAACR,MAAJ,CAAWC,OAAvB;AACAb,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAEZ,iBADD;AAELa,QAAAA,IAAI,EAAE;AACFC,UAAAA,SAAS,EAAEL,QAAQ,CAACM,MAAT,CAAgBC,OADzB;AAEFQ,UAAAA,SAAS,EAAED,GAAG,CAACR,MAAJ,CAAWC;AAFpB;AAFD,OAAD,CAAR;AAOP,KAZD,EAaCC,KAbD,CAaO,UAASC,KAAT,EAAgB;AACnBR,MAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACH,KAfD;AAgBH,GApBD,CAoBE,OAAMC,GAAN,EAAU;AACRT,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBQ,GAApB;AACH;AACJ,CAxBM","sourcesContent":["\nimport { LOAD_DROPBOX_DATA } from \"./types\"\nimport { Dropbox } from \"dropbox\"\n\nexport const loadDropboxData = () => async dispatch => {\n    try{\n        let dbx = new Dropbox({ \n            accessToken: 'sl.BAuriOtPpEMA_28LhjbiaXgi1eiVlBrzQtVacffvsUTSLpEDBaqLrR3u8dh5r9j__LZ0MlS_Bhx5Jbq3VWmmYPyp3qEsKG9dJoQWC8lvQ6n4Q7C0AqMLTnGlO6VCuMAQWd45kbcspzvF'\n        });\n        dbx.filesListFolder({path: ''})\n        .then(function(response) {\n            console.log(response);\n            dispatch({\n                type: LOAD_DROPBOX_DATA,\n                data: {\n                    fileArray: response.result.entries,\n                }\n            })\n        })\n        .catch(function(error) {\n            console.error(error);\n        });\n\n    } catch(err){\n        console.log('err:', err)\n    }\n}\nexport const loadDropboxImgData = (path) => async dispatch => {\n    try{\n        let dbx = new Dropbox({ \n            accessToken: 'sl.BAuriOtPpEMA_28LhjbiaXgi1eiVlBrzQtVacffvsUTSLpEDBaqLrR3u8dh5r9j__LZ0MlS_Bhx5Jbq3VWmmYPyp3qEsKG9dJoQWC8lvQ6n4Q7C0AqMLTnGlO6VCuMAQWd45kbcspzvF'\n        });\n        dbx.filesGetThumbnailV2({\n                entries: paths\n        }).\n        then(res => {\n                console.log(res.result.entries);\n                dispatch({\n                    type: LOAD_DROPBOX_DATA,\n                    data: {\n                        fileArray: response.result.entries,\n                        thumbnail: res.result.entries\n                    }\n                })\n        })\n        .catch(function(error) {\n            console.error(error);\n        });\n    } catch(err){\n        console.log('err:', err)\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}