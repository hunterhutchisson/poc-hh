{"ast":null,"code":"import { LOAD_DROPBOX_DATA } from \"./types\";\nimport axios from 'axios';\nimport { Dropbox } from \"dropbox\";\nexport const loadDropboxData = () => async dispatch => {\n  try {\n    let dbx = new Dropbox({\n      accessToken: 'sl.BAuDa9rsvD6TVigfwU7jc2bs9v9-BYtPVBdaMnPUKisLFzxpCQqC4nI7lZ5KA0oOvSWixLQH3CTPb17_-6eQgxSoUIJV9qKWILaQ2WGfW1yVqrjhpA3j8SlYKlCEGgmV1na3ISg4gKe_'\n    });\n    dbx.filesListFolder({\n      path: ''\n    }).then(function (response) {\n      let paths = response.result.entries.map(file => ({\n        path: file.path_lower\n      }));\n      console.log(paths);\n      dbx.filesGetThumbnailBatch({\n        entries: paths\n      }).then(res => {\n        console.log(respresonse.result.entries.thumbnail);\n        dispatch({\n          type: LOAD_DROPBOX_DATA,\n          data: {\n            thumbnail: response.result.entries.thumbnail\n          }\n        });\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  } catch (err) {\n    console.log('err:', err);\n  }\n};","map":{"version":3,"sources":["/Users/hunterhutchisson/inerg/poc-hh/src/actions/index.js"],"names":["LOAD_DROPBOX_DATA","axios","Dropbox","loadDropboxData","dispatch","dbx","accessToken","filesListFolder","path","then","response","paths","result","entries","map","file","path_lower","console","log","filesGetThumbnailBatch","res","respresonse","thumbnail","type","data","catch","error","err"],"mappings":"AACA,SAASA,iBAAT,QAAkC,SAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnD,MAAG;AACC,QAAIC,GAAG,GAAG,IAAIH,OAAJ,CAAY;AAClBI,MAAAA,WAAW,EAAE;AADK,KAAZ,CAAV;AAIAD,IAAAA,GAAG,CAACE,eAAJ,CAAoB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAApB,EACCC,IADD,CACM,UAASC,QAAT,EAAmB;AACrB,UAAIC,KAAK,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4BC,IAAI,KAAI;AAC5CP,QAAAA,IAAI,EAAEO,IAAI,CAACC;AADiC,OAAJ,CAAhC,CAAZ;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAN,MAAAA,GAAG,CAACc,sBAAJ,CAA2B;AACvBN,QAAAA,OAAO,EAAEF;AADc,OAA3B,EAEGF,IAFH,CAEQW,GAAG,IAAI;AACXH,QAAAA,OAAO,CAACC,GAAR,CAAYG,WAAW,CAACT,MAAZ,CAAmBC,OAAnB,CAA2BS,SAAvC;AACAlB,QAAAA,QAAQ,CAAC;AACLmB,UAAAA,IAAI,EAAEvB,iBADD;AAELwB,UAAAA,IAAI,EAAE;AACFF,YAAAA,SAAS,EAAEZ,QAAQ,CAACE,MAAT,CAAgBC,OAAhB,CAAwBS;AADjC;AAFD,SAAD,CAAR;AAMH,OAVD;AAYH,KAlBD,EAmBCG,KAnBD,CAmBO,UAASC,KAAT,EAAgB;AACrBT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACD,KArBD;AAuBH,GA5BD,CA4BE,OAAMC,GAAN,EAAU;AACRV,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,GAApB;AACH;AACJ,CAhCM","sourcesContent":["\nimport { LOAD_DROPBOX_DATA } from \"./types\"\nimport axios from 'axios'\nimport { Dropbox } from \"dropbox\"\n\nexport const loadDropboxData = () => async dispatch => {\n    try{\n        let dbx = new Dropbox({ \n            accessToken: 'sl.BAuDa9rsvD6TVigfwU7jc2bs9v9-BYtPVBdaMnPUKisLFzxpCQqC4nI7lZ5KA0oOvSWixLQH3CTPb17_-6eQgxSoUIJV9qKWILaQ2WGfW1yVqrjhpA3j8SlYKlCEGgmV1na3ISg4gKe_',\n            \n          });\n        dbx.filesListFolder({path: ''})\n        .then(function(response) {\n            let paths = response.result.entries.map(file =>({\n                path: file.path_lower,\n            }))\n            console.log(paths);\n            dbx.filesGetThumbnailBatch({\n                entries: paths\n            }).then(res => {\n                console.log(respresonse.result.entries.thumbnail);\n                dispatch({\n                    type: LOAD_DROPBOX_DATA,\n                    data: {\n                        thumbnail: response.result.entries.thumbnail\n                    }\n                })\n            })\n            \n        })\n        .catch(function(error) {\n          console.error(error);\n        });\n\n    } catch(err){\n        console.log('err:', err)\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}